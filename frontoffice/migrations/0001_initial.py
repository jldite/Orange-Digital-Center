# Generated by Django 5.0.4 on 2025-08-06 10:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('backoffice', '0001_initial'),
        ('events', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1 - Très mauvais'), (2, '2 - Mauvais'), (3, '3 - Moyen'), (4, '4 - Bon'), (5, '5 - Excellent')], verbose_name='Évaluation')),
                ('comment', models.TextField(verbose_name='Commentaire')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='backoffice.event', verbose_name='Événement')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedbacks', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interests', models.TextField(blank=True, null=True, verbose_name="Centres d'intérêt")),
                ('skills', models.TextField(blank=True, null=True, verbose_name='Compétences')),
                ('newsletter_subscribed', models.BooleanField(default=True, verbose_name='Abonné à la newsletter')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='frontoffice_profile', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Profil Frontoffice',
                'verbose_name_plural': 'Profils Frontoffice',
            },
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'En attente'), ('CONFIRMED', 'Confirmé'), ('CANCELLED', 'Annulé')], default='PENDING', max_length=20, verbose_name='Statut')),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name="Date d'inscription")),
                ('attended', models.BooleanField(default=False, verbose_name='A participé')),
                ('backoffice_application', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='frontoffice_counterpart', to='backoffice.application', verbose_name='Application Backoffice')),
                ('backoffice_registration', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='frontoffice_counterpart', to='events.registration', verbose_name='Inscription Backoffice')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frontoffice_registrations', to='backoffice.event', verbose_name='Événement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frontoffice_registrations', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Inscription Frontoffice',
                'verbose_name_plural': 'Inscriptions Frontoffice',
                'unique_together': {('user', 'event')},
            },
        ),
    ]
